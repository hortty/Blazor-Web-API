@page "/"

@using BlazorWebApp.DTOs.Film
@using BlazorWebApp.DTOs.ShoppingCartMovieDTO
@using BlazorWebApp.Interfaces
@using BlazorWebApp.Services
@using BlazorWebApp.Util
@using System
@inject IDialogService dialogService
@inject IShoppingCartMovieService shoppingCartMovieService

<head>
    <link rel="stylesheet" href="/css/pages/index.css" />
</head>
<body>
    <div class="container text-center">
        <div class="row row-cols-1 row-cols-md-4 row-cols-sm-2">
            @foreach (var filme in filmes)
            {
                var index = filmes.IndexOf(filme);
                <div class="grid-container">
                    <div class="grid-item">
                        <div class="card">
                            <img src="@imagemSrc[index]" alt="@filme.Name" class="card-img-top">
                            <div class="card-content">
                                <h5 class="card-title">@filme.Name</h5>
                                <p class="card-text">@filme.Description</p>
                                <p class="card-text" style="border-top: 0.1rem solid black; padding-top: 0.5rem;">$ @(filme.Price.ToString("F2"))</p>
                            </div>
                        </div>
                        <button @onclick="() => Comprar(filme)" class="btn btn-primary buy-button-item" style="max-width: 30rem;">Buy</button>
                    </div>
                </div>
            }
        </div>
    </div>

    @* <MudButton Variant="Variant.Filled" Color="Color.Primary">Primary</MudButton> *@
</body>

@code {
    private List<FoundFilmDto> filmes = new List<FoundFilmDto>();
    private List<string> imagemSrc = new List<string>();

    protected override void OnInitialized()
    {
        // var filmes =  FilmService.GetAll();
        // ChangeValues(filmes);
        StateHasChanged(); 
    }

    private void ChangeValues(List<FoundFilmDto> films)
    {
        this.filmes = films;
        this.imagemSrc = new List<string>();

        foreach (var filme in this.filmes)
        {
            if (filme.Imagem.Length > 0)
            {
                this.imagemSrc.Add($"data:image/jpeg;base64,{filme.Imagem}");
            }
        }
    }

    private async void Comprar(FoundFilmDto film)
    {
        // TODO: shoppingCartId relacao com ShoppingCart, o qual possui userId
        var shoppingCartMovieDto = new CreateShoppingCartMovieDto
        {
            Amount = 1,
            ShoppingCartId = Guid.NewGuid(),
            FilmId = film.Id,
        };

        await shoppingCartMovieService.CreateAsync(shoppingCartMovieDto);
    }
}
