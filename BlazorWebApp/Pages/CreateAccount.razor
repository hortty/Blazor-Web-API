@page "/create-account"

@using BlazorWebApp.DTOs.Customer
@using BlazorWebApp.Interfaces
@using BlazorWebApp.Util
@using System
@using MudBlazor
@inject IDialogService dialogService
@inject ICustomerService customerService

<head>
    <link rel="stylesheet" href="/css/pages/createAccount.css" />
</head>
<body>
    <div class="align-items">
        <EditForm EditContext="editContext" OnValidSubmit="CreateAc">
            <div class="items-container">
                <div class="form-group">
                    <label for="name">Name</label>
                    <InputText id="name" @bind-Value="account.Name" class="form-control" />
                    <ValidationMessage For="@(() => account.Name)" />
                </div>
                <div class="form-group">
                    <label for="phone">Phone</label>
                    <InputText id="phone" @bind-Value="account.Phone" class="form-control" />
                    <ValidationMessage For="@(() => account.Phone)" />
                </div>
                <div class="form-group">
                    <label for="address">Address</label>
                    <InputText id="address" @bind-Value="account.Address" class="form-control" />
                    <ValidationMessage For="@(() => account.Address)" />
                </div>
                <div class="form-group">
                    <label for="age">Age</label>
                    <InputNumber id="age" @bind-Value="account.Age" class="form-control" />
                    <ValidationMessage For="@(() => account.Age)" />
                </div>
                <button type="submit" class="btn btn-primary">Create Customer</button>
            </div>
        </EditForm>
    </div>
</body>

@code {
    private CreateCustomerDto account = new CreateCustomerDto();

    EditContext editContext;

    protected override void OnInitialized()
    {
        try
        {
            editContext = new EditContext(account);
        }
        catch(Exception ex)
        {
            return;
        }
    }

    private async Task CreateAc()
    {
        try
        {
            account.UserId = Guid.NewGuid();

            if (!editContext.Validate())
            {
                await customerService.CreateCustomer(account);
            }
            else
            {
                editContext.Validate();
            }
        }
        catch(Exception ex)
        {
            await dialogService.ShowMessageBox("Erro", ex.Message);
        }
    }
}
